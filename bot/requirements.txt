import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from faster_whisper import WhisperModel
import aiofiles
from pydub import AudioSegment
import os

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# بارگذاری مدل Whisper از faster-whisper
model = WhisperModel("base", compute_type="int8")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("سلام! لطفا یک پیام صوتی ارسال کنید تا متن آن را استخراج کنم.")

async def voice_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    voice = update.message.voice
    if not voice:
        await update.message.reply_text("لطفا یک پیام صوتی ارسال کنید.")
        return

    file = await context.bot.get_file(voice.file_id)
    ogg_path = f"voice_{update.message.message_id}.ogg"
    wav_path = f"voice_{update.message.message_id}.wav"

    # دانلود فایل ogg
    await file.download_to_drive(ogg_path)

    # تبدیل ogg به wav با pydub
    audio = AudioSegment.from_ogg(ogg_path)
    audio.export(wav_path, format="wav")

    # حذف فایل ogg برای صرفه جویی در فضا
    os.remove(ogg_path)

    # استفاده از مدل برای تشخیص گفتار روی wav
    segments, info = model.transcribe(wav_path)

    # حذف فایل wav پس از پردازش
    os.remove(wav_path)

    result_text = ""
    for segment in segments:
        result_text += segment.text + " "

    await update.message.reply_text(result_text.strip())

async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    logger.error(msg="Exception while handling an update:", exc_info=context.error)

if __name__ == '__main__':
    import os
    TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")  # توکن ربات را اینجا بگذار

    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.VOICE, voice_handler))
    app.add_error_handler(error_handler)

    print("ربات در حال اجراست...")
    app.run_polling()
